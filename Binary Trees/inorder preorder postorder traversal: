
void levelOrderTraversal(node* root){
    queue<node* > q;
    q.push(root);
    q.push(NULL);
       
    while(!q.empty()){
        node* temp = q.front();
        q.pop();
        if(temp == NULL){
            cout<<endl;
            if(!q.empty()){
                q.push(NULL);
            }
        }

    else{

        cout<<temp -> data<<" ";
        if(temp -> left){
            q.push(temp -> left);
        }

         if(temp -> right){
            q.push(temp -> right);
        }
    }
    }
}


void inorderTraversal(node* root){
    //base

    if(root == NULL){
        return;
    }

    inorderTraversal(root -> left);
    cout<< root -> data;
    inorderTraversal(root -> right);

}

void preorderTraversal(node* root){
    //base

    if(root == NULL){
        return;
    }

    cout<< root -> data;
    preorderTraversal(root -> left);
    
    preorderTraversal(root -> right);
    
}
 

 void postorderTraversal(node* root){
    //base

    if(root == NULL){
        return;
    }


    postorderTraversal(root -> left);
    
    postorderTraversal(root -> right);
    cout<< root -> data;
    
}