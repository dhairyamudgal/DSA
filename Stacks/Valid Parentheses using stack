
bool isValidParenthesis(string expression) {
    stack<char> s;
    for (int i = 0; i < expression.length(); i++) {
        char ch = expression[i];

        if (ch == '{' || ch == '(' || ch == '[') {
            // push
            s.push(ch);
        }
        
         else {
            // pop
            if (!s.empty()) {
                if ((ch == '}' && s.top() == '{') ||
                    (ch == ')' && s.top() == '(') ||
                    (ch == ']' && s.top() == '[')) {
                    s.pop();
                } 
                
                else {
                    return false; 
                }
            } 
            
            else {
                return false; 
            }
        }
    }

    return s.empty(); 
}
